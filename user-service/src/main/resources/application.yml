server:
  port: 8082
jwt:
  secret: ENC(Y5+nMGI0UCr5p44U+K47gUvn4SU7CrFtntCMWvwt+8qMEk/FqJfZWLoNLXeMEL01xhv9mBSAkxjrr8cUyPPHc8PP9PkSvDuhuWU+/ST7ajxN2WWmzhdd8xDXYiBa+TrWJSo2ithd2hcX4EDyfR34wQ==)
spring:
  application:
    name: user-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/users-db}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:iamgroot}
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
      dialect: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
  sql:
    init:
      mode: always
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  cache:
    type: redis
    redis:
      time-to-live: 60000
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
logging:
  level:
    root: debug
    eureka: info
jasypt:
  encryptor:
    password: spatifilum